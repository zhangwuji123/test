<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.cloud.operation" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" >
		<mvc:message-converters register-defaults="false">  
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" >
                <property name = "supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                   </list>
                 </property> 
            </bean>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
            <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
            <bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
            <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" /> 
            <ref bean="jacksonConverter" />  
        </mvc:message-converters>  
	</mvc:annotation-driven> 
	
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"> 
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="false" /> 
		<property name="ignoreAcceptHeader" value="false" /> 
		<property name="mediaTypes" > 
			<value>
				atom=application/atom+xml
			 	html=text/html
				json=application/json
				*=*/*
			</value> 
		</property>
	</bean>
	<!-- 将无法mapping到Controller的path交给default servlet handler处理 -->		
	<mvc:default-servlet-handler/>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <property name="defaultEncoding">  
	        <value>UTF-8</value>  
	    </property>  
	    <property name="maxUploadSize">  
	        <value>1048576</value><!-- 上传文件大小限制为1M，1*1024*1024 -->  
	    </property>  
	    <property name="maxInMemorySize">  
	        <value>4096</value>  
	    </property>  
	</bean>
	<!-- 定义JSP文件的位置 --> 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	
    <bean id="jacksonConverter"  
        class="com.cloud.operation.service.util.Jackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
	            <value>text/plain;charset=UTF-8</value>
	            <value>application/json;charset=UTF-8</value>
            </list>  
        </property>  
    </bean>  
     
      
   <bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>  
	
	
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/index"/>
	
	<!-- 支持 Shiro对Controller的方法级AOP安全控制 begin-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	
	 <!-- 全局异常配置 start -->  
     <bean id="exceptionResolver" class="com.cloud.operation.core.exception.RestExceptionResolver"/>  
     <!-- 全局异常配置 end -->	
</beans>
